/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: BBMAP_ALIGN {
		ext.args = "local=true maxindel=80"
        publishDir = [
            path: { "${params.outdir}/init_align" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,log}"
        ]
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2:BOWTIE2_ALIGN' {
        ext.args = '--local --very-sensitive-local --seed 1'
        ext.args2 = '-F4 -bhS'
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.sorted" }
        publishDir = [
            path: { "${params.outdir}/bowtie2" },
            mode: params.publish_dir_mode,
            pattern: "*.sorted.bam"
        ]
    }

    withName: '.*:FASTQ_ALIGN_BOWTIE2:BAM_SORT_STATS_SAMTOOLS:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.sorted.bam" }
        publishDir = [
            path: { "${params.outdir}/bowtie2/samtools_stats" },
            mode: params.publish_dir_mode,
            pattern: "*.{stats,flagstat,idxstats}"
        ]
    }

    withName: IVAR_TRIM {
        ext.args = [
            '-m 30 -q 20',
            params.ivar_trim_noprimer ? '' : '-e',
            params.ivar_trim_offset   ? "-x ${params.ivar_trim_offset}" : ''
            ].join(' ').trim()
        ext.prefix = { "${meta.id}.ivar_trim" }
        publishDir = [
            path: { "${params.outdir}/ivar/trim/log" },
            mode: params.publish_dir_mode,
            pattern: '*.log'
        ]
    }

    withName: '.*:IVAR_PRIMER_TRIM:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_SORT' {
        ext.prefix = { "${meta.id}.ivar_trim.sorted" }
        publishDir = [
            path: { "${params.outdir}/ivar/trim" },
            mode: params.publish_dir_mode,
            pattern: "*.bam"
        ] 
    }

	withName: '.*:IVAR_PRIMER_TRIM:BAM_SORT_STATS_SAMTOOLS:SAMTOOLS_INDEX' {
		publishDir = [
			path: { "${params.outdir}/ivar/trim" },
			mode: params.publish_dir_mode,
			pattern: "*.bai"
		]
	}

	withName: '.*:IVAR_PRIMER_TRIM:BAM_SORT_STATS_SAMTOOLS:BAM_STATS_SAMTOOLS:.*' {
        ext.prefix = { "${meta.id}.ivar_trim.sorted.bam" }
        publishDir = [ 
            path: { "${params.outdir}/ivar/trim/samtools_stats" },
            mode: params.publish_dir_mode,
            pattern: "*.{stats,flagstat,idxstats}"
        ]   
    } 

    withName: IVAR_VARIANTS {
        ext.args = '-t 0.25 -q 20 -m 10'
        ext.args2 = '--ignore-overlaps --count-orphans --no-BAQ --max-depth 0 --min-BQ 0'
        publishDir = [
            path: { "${params.outdir}/ivar/variants" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: IVAR_CONSENSUS {
        ext.args = '-t 0.6 -q 20 -m 5 -n N'
        ext.args2 = '--count-orphans --no-BAQ --max-depth 0 --min-BQ 0 -aa'
        ext.prefix = { "${meta.id}.consensus" }
        publishDir = [
            [
                path: { "${params.outdir}/ivar/consensus" },
                mode: params.publish_dir_mode,
                pattern: "*.{fa,txt}",
            ],
            [
                path: { "${params.outdir}/ivar/mpileup" },
                mode: params.publish_dir_mode,
                pattern: "*.mpileup",
                enabled: params.save_mpileup
            ]    
        ]
    }

    withName: EDIT_IVAR_VARIANTS {
        publishDir = [
            path: { "${params.outdir}/ivar/variants" },
            mode: params.publish_dir_mode,
            pattern: "*.reformatted.tsv"
        ]
    }

	withName: SUMMARY {
		publishDir =[
			path: { "${params.outdir}/summary" },
			mode: params.publish_dir_mode,
			pattern: "*.summary.tsv"
		]
	}

	withName: CLEANUP {
		publishDir = [
			path: { "${params.outdir}" },
			mode: params.publish_dir_mode,
			pattern: "*summary.tsv"
		]
	}
}

if (!params.skip_fastqc) {
    process {
        withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_RAW' {
            ext.args = '--quiet'
            publishDir = [
                path: { "${params.outdir}/fastqc/raw" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (!params.skip_fastp) {
    process {
        withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTP' {
            ext.args = "--cut_front --cut_tail --trim_poly_x --cut_mean_quality 30 --qualified_quality_phred 30 --unqualified_percent_limit 10 --length_required ${params.trim_len}"
            publishDir = [
                [
                    path: { "${params.outdir}/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{json,html}"
                ],
                [
                    path: { "${params.outdir}/fastp/log" },
                    mode: params.publish_dir_mode,
                    pattern: "*.log"
                ],
                [
                    path: { "${params.outdir}/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fail.fastq.gz",
                    enabled: params.save_trimmed_fail
                ]
            ]
        }
    }

    if (!params.skip_fastqc) {
		process {
			withName: '.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_TRIM' {
				ext.args = '--quiet'
				publishDir = [
					path: { "${params.outdir}/fastqc/trim" },
					mode: params.publish_dir_mode,
					saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
				]
			}
		}
    }
}

if (!params.skip_multiqc) {
	process {
		withName: 'MULTIQC' {
			publishDir = [
				path: { "${params.outdir}/multiqc" },
				mode: params.publish_dir_mode,
				pattern: "*multiqc*"
			]
		}
	}
}

